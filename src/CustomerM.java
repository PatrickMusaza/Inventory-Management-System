
import java.sql.ResultSetMetaData;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Patrick
 */
public class CustomerM extends javax.swing.JPanel {

    private boolean isNew = false;

    /**
     * Creates new form Customer
     */
    public CustomerM() {
        initComponents();
        table_update();

        this.Individual.setSelected(false);
        this.Corporate.setSelected(false);
        this.TIN.setEditable(false);
        this.Name.setEditable(false);
        this.Phone2.setEditable(false);
        this.Nationality.setSelectedItem(null);
        this.Safety2.setEditable(false);
        this.Safety3.setEditable(false);
        this.Address.setEditable(false);
        this.Email.setEditable(false);
        this.Delegator.setEditable(false);
        this.Account.setEditable(false);
        this.Phone1.setEditable(false);
        this.Bank.setEditable(false);
        this.Remark.setEditable(false);
        this.Use.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addNew = new javax.swing.JButton();
        saveItem = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Nationality = new javax.swing.JComboBox<>();
        Email = new javax.swing.JTextField();
        Account = new javax.swing.JTextField();
        Address = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Phone1 = new javax.swing.JTextField();
        Use = new javax.swing.JCheckBox();
        Individual = new javax.swing.JRadioButton();
        Corporate = new javax.swing.JRadioButton();
        Name = new java.awt.TextField();
        Bank = new java.awt.TextField();
        Phone2 = new javax.swing.JTextField();
        Safety2 = new javax.swing.JTextField();
        Safety3 = new javax.swing.JTextField();
        Remark = new javax.swing.JTextField();
        TIN = new java.awt.TextField();
        Delegator = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        srcCode = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        srcName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        srcActive = new javax.swing.JCheckBox();
        Search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Customer Management");

        addNew.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        addNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/credit-card-add.png"))); // NOI18N
        addNew.setText("New");
        addNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNewMouseClicked(evt);
            }
        });
        addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewActionPerformed(evt);
            }
        });

        saveItem.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        saveItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/floppy-disk.png"))); // NOI18N
        saveItem.setText("Save");
        saveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveItemActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close.png"))); // NOI18N
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Clear)
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addNew)
                    .addComponent(saveItem)
                    .addComponent(Clear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(136, 131, 131)));

        jLabel4.setText("Type*");

        jLabel5.setText("TIN*");

        jLabel6.setText("Name*");

        jLabel7.setText("Bank");

        jLabel8.setText("Address");

        jLabel9.setText("Delegator");

        jLabel10.setText("Nationality");

        jLabel11.setText("E-Mail");

        jLabel12.setText("Account");

        jLabel13.setText("Remark");

        jLabel14.setText("Phone 1*");

        Nationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", "Canada", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo", "Democratic Republic of the", "Congo", "Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor (Timor-Leste)", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Eswatini (formerly Swaziland)", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea", "North", "Korea", "South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar (Burma)", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Macedonia (formerly Macedonia)", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States of America", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City (Holy See)", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe" }));
        Nationality.setSelectedItem("Rwanda");

        jLabel15.setText("Phone 2");

        jLabel16.setText("FAX No.");

        jLabel17.setText("Depositor");

        jLabel18.setText("Use");

        Phone1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Phone1KeyTyped(evt);
            }
        });

        Use.setText("Yes ");

        Individual.setText("Individual");
        Individual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IndividualActionPerformed(evt);
            }
        });

        Corporate.setText("Corporate");
        Corporate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorporateActionPerformed(evt);
            }
        });

        Phone2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Phone2KeyTyped(evt);
            }
        });

        Safety3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Safety3KeyTyped(evt);
            }
        });

        TIN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TINKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TIN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Individual, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Corporate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Delegator, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Phone1)
                                    .addComponent(Phone2)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Safety2)
                                    .addComponent(Safety3)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Remark, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Account, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(Use, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Individual)
                    .addComponent(Corporate)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14)
                    .addComponent(Phone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Delegator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel5)
                        .addComponent(Nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(Phone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(Safety3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel12)
                        .addComponent(Account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Bank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(Safety2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Address, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(Remark)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Use)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(16, 16, 16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13)
                            .addComponent(jLabel18))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 60, 60)));

        jLabel19.setText("Customer Code");

        srcCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcCodeKeyReleased(evt);
            }
        });

        jLabel20.setText("Customer Name");

        srcName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcNameKeyReleased(evt);
            }
        });

        jLabel21.setText("Use");

        srcActive.setText("Yes ");

        Search.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/loupe.png"))); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(srcCode, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(srcName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(srcActive, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(Search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(srcName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(srcActive)
                    .addComponent(Search)
                    .addComponent(srcCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Type", "Name", "Delegator", "Nationality", "Email", "Phone 1", "Phone 2", "FAX"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 835, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    PreparedStatement insert;

    private void table_update() {

        int count;

        try {

            Connection con = Connect.getConnection();

            insert = con.prepareStatement("select * from customer");

            ResultSet rs = insert.executeQuery();
            ResultSetMetaData rsmd = (ResultSetMetaData) rs.getMetaData();
            count = rsmd.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int i = 1; i <= count; i++) {

                    v2.add(rs.getString("TIN"));
                    v2.add(rs.getString("Type"));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Delegator"));
                    v2.add(rs.getString("Nationality"));
                    v2.add(rs.getString("Email"));
                    v2.add(rs.getString("Phone1"));
                    v2.add(rs.getString("Phone2"));
                    v2.add(rs.getString("FAX"));
                    //v2.add(rs.getString("TaxType"));
                    //v2.add(rs.getString("BeginningStock"));
                    //v2.add(rs.getString("CurrentStock"));
                    //v2.add(rs.getString("SafetyStock"));
                    //v2.add(rs.getString("Description"));
                    //v2.add(rs.getString("Use"));

                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(CustomerM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }


    private void addNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addNewMouseClicked

    private void addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewActionPerformed
        // TODO add your handling code here:

        this.Individual.setSelected(false);
        this.Corporate.setSelected(false);
        this.TIN.setText("");
        this.Name.setText("");
        this.Phone2.setText("");
        this.Nationality.setSelectedIndex(0);
        this.Safety2.setText("");
        this.Safety3.setText("");
        this.Address.setText("");
        this.Email.setText("");
        this.Delegator.setText("");
        this.Account.setText("");
        this.Phone1.setText("");
        this.Bank.setText("");
        this.Remark.setText("");
        this.Use.setSelected(false);

        this.Individual.setSelected(false);
        this.Corporate.setSelected(true);
        this.TIN.setEditable(true);
        this.Name.setEditable(true);
        this.Phone2.setEditable(true);
        this.Nationality.setSelectedIndex(0);
        this.Safety2.setEditable(true);
        this.Safety3.setEditable(true);
        this.Address.setEditable(true);
        this.Email.setEditable(true);
        this.Delegator.setEditable(true);
        this.Account.setEditable(true);
        this.Phone1.setEditable(true);
        this.Bank.setEditable(true);
        this.Remark.setEditable(true);
        this.Use.setSelected(false);

        isNew = true;

    }//GEN-LAST:event_addNewActionPerformed

    private void saveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveItemActionPerformed
        // TODO add your handling code here:
        if (!ValidateForm.isInternetReachable()) {
            try {
                Connection con = Connect.getConnection();
                con.close();
                JOptionPane.showMessageDialog(null, "There is no internet Connection!", "Internet Connectivity", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            int selectedRow = jTable1.getSelectedRow();

            if (isNew && selectedRow < 0) {

                String input1 = this.Name.getText().trim();
                String input2 = this.TIN.getText().trim();
                String input3 = this.Phone1.getText().trim();
                if (input1.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Customer Name.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (this.Corporate.isSelected() && input2.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Customer TIN Number.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (input3.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Customer Phone Number.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {

                    String Type;
                    Type = null;

                    String TIN = this.TIN.getText();
                    String Name = this.Name.getText();
                    String Bank = this.Bank.getText();
                    String Address = this.Address.getText();
                    String Delegator = this.Delegator.getText();
                    String Nationality;
                    String Email = this.Email.getText();
                    String Account = this.Account.getText();
                    String Remark = this.Remark.getText();
                    String Phone1 = this.Phone1.getText();
                    String Phone2 = this.Phone2.getText();
                    String FAX = this.Safety3.getText();
                    String Depositor = this.Safety2.getText();
                    String Use;
                    int index;

                    String Username = Login.Username.getText();

                    index = this.Nationality.getSelectedIndex();
                    Nationality = this.Nationality.getItemAt(index);

                    if (this.Individual.isSelected()) {
                        Type = "Individual";

                        TIN = Phone1;

                    } else if (this.Corporate.isSelected()) {
                        Type = "Corporate";
                    }

                    if (this.Use.isSelected()) {
                        Use = "Yes";
                    } else {
                        Use = "No";
                    }

                    if (this.Individual.isSelected()) {
                        TIN = Phone1;
                    }

                    try {

                        Connection con = Connect.getConnection();

                        insert = con.prepareStatement("insert into customer (Type,TIN,Name,Bank,Address,Delegator,Nationality,Email,Account,Remark,Phone1,Phone2,FAX,Depositor,Active, createdBy) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                        insert.setString(1, Type);
                        insert.setString(2, TIN);
                        insert.setString(3, Name);
                        insert.setString(4, Bank);
                        insert.setString(5, Address);
                        insert.setString(6, Delegator);
                        insert.setString(7, Nationality);
                        insert.setString(8, Email);
                        insert.setString(9, Account);
                        insert.setString(10, Remark);
                        insert.setString(11, Phone1);
                        insert.setString(12, Phone2);
                        insert.setString(13, FAX);
                        insert.setString(14, Depositor);
                        insert.setString(15, Use);
                        insert.setString(16, Username);
                        insert.executeUpdate();

                        JOptionPane.showMessageDialog(null, "New Customer Recorded");
                        table_update();

                        this.Individual.setSelected(false);
                        this.Corporate.setSelected(false);
                        this.TIN.setText("");
                        this.Name.setText("");
                        this.Phone2.setText("");
                        this.Nationality.setSelectedIndex(0);
                        this.Safety2.setText("");
                        this.Safety3.setText("");
                        this.Address.setText("");
                        this.Email.setText("");
                        this.Delegator.setText("");
                        this.Account.setText("");
                        this.Phone1.setText("");
                        this.Bank.setText("");
                        this.Remark.setText("");
                        this.Use.setSelected(false);
                        this.TIN.requestFocus();

                    } catch (SQLException ex) {
                        java.util.logging.Logger.getLogger(CustomerM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                    }
                }
            } else {

                String input = TIN.getText().trim();
                if (this.Corporate.isSelected() && input.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter TIN of the Customer.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {

                    DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
                    int selectedIndex = jTable1.getSelectedRow();

                    String Type;
                    Type = null;

                    String TIN = this.TIN.getText();
                    String Name = this.Name.getText();
                    String Bank = this.Bank.getText();
                    String Address = this.Address.getText();
                    String Delegator = this.Delegator.getText();
                    String Nationality;
                    String Email = this.Email.getText();
                    String Account = this.Account.getText();
                    String Remark = this.Remark.getText();
                    String Phone1 = this.Phone1.getText();
                    String Phone2 = this.Phone2.getText();
                    String FAX = this.Safety3.getText();
                    String Depositor = this.Safety2.getText();
                    String Use;
                    int index;

                    String Username = Login.Username.getText();

                    index = this.Nationality.getSelectedIndex();
                    Nationality = this.Nationality.getItemAt(index);

                    if (this.Individual.isSelected()) {
                        Type = "Individual";
                    } else if (this.Corporate.isSelected()) {
                        Type = "Corporate";
                    }

                    if (this.Use.isSelected()) {
                        Use = "Yes";
                    } else {
                        Use = "No";
                    }

                    try {

                        int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());

                        Connection con = Connect.getConnection();

                        insert = con.prepareStatement("update customer set Type=?,Name=?,Bank=?,Address=?,Delegator=?,Nationality=?,Email=?,Account=?,Remark=?,Phone1=?,Phone2=?,FAX=?,Depositor=?,Active=?, createdBy=? where TIN=?");
                        insert.setString(1, Type);
                        insert.setString(2, Name);
                        insert.setString(3, Bank);
                        insert.setString(4, Address);
                        insert.setString(5, Delegator);
                        insert.setString(6, Nationality);
                        insert.setString(7, Email);
                        insert.setString(8, Account);
                        insert.setString(9, Remark);
                        insert.setString(10, Phone1);
                        insert.setString(11, Phone2);
                        insert.setString(12, FAX);
                        insert.setString(13, Depositor);
                        insert.setString(14, Use);
                        insert.setString(15, Username);
                        insert.setInt(16, id);
                        insert.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Customer Updated!");
                        table_update();

                        this.Individual.setSelected(false);
                        this.Corporate.setSelected(false);
                        this.TIN.setText("");
                        this.Name.setText("");
                        this.Phone2.setText("");
                        this.Nationality.setSelectedIndex(0);
                        this.Safety2.setText("");
                        this.Safety3.setText("");
                        this.Address.setText("");
                        this.Email.setText("");
                        this.Delegator.setText("");
                        this.Account.setText("");
                        this.Phone1.setText("");
                        this.Bank.setText("");
                        this.Remark.setText("");
                        this.Use.setSelected(false);
                        this.TIN.requestFocus();

                    } catch (SQLException ex) {
                        java.util.logging.Logger.getLogger(CustomerM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_saveItemActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:

        this.Individual.setSelected(false);
        this.Corporate.setSelected(false);
        this.TIN.setText("");
        this.Name.setText("");
        this.Phone2.setText("");
        this.Nationality.setSelectedItem(null);
        this.Safety2.setText("");
        this.Safety3.setText("");
        this.Address.setText("");
        this.Email.setText("");
        this.Delegator.setText("");
        this.Account.setText("");
        this.Phone1.setText("");
        this.Bank.setText("");
        this.Remark.setText("");
        this.Use.setSelected(false);

    }//GEN-LAST:event_ClearActionPerformed

    private void Phone1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Phone1KeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_Phone1KeyTyped

    private void IndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IndividualActionPerformed
        // TODO add your handling code here:

        if (evt.getSource() == this.Individual) {
            this.Individual.setSelected(true);
            this.Corporate.setSelected(false);
            // this.Delegator.setEditable(false);
            this.TIN.setEditable(false);
            TIN.setVisible(false);
        }
    }//GEN-LAST:event_IndividualActionPerformed

    private void CorporateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorporateActionPerformed
        // TODO add your handling code here:

        if (evt.getSource() == this.Corporate) {
            this.Corporate.setSelected(true);
            this.Individual.setSelected(false);
            this.Delegator.setEditable(true);
            this.TIN.setEditable(true);
            TIN.setVisible(true);
        }
    }//GEN-LAST:event_CorporateActionPerformed

    private void Phone2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Phone2KeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_Phone2KeyTyped

    private void Safety3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Safety3KeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_Safety3KeyTyped

    private void TINKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TINKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_TINKeyTyped

    private void srcCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcCodeKeyReleased
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(srcCode.getText(), 0));
    }//GEN-LAST:event_srcCodeKeyReleased

    private void srcNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcNameKeyReleased
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(srcName.getText(), 2));
    }//GEN-LAST:event_srcNameKeyReleased

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(srcCode.getText(), 0));
        obj.setRowFilter(RowFilter.regexFilter(srcName.getText(), 2));
        //obj.setRowFilter(RowFilter.regexFilter(srcActive.getText()));
    }//GEN-LAST:event_SearchActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        this.TIN.setText(Df.getValueAt(selectedIndex, 0).toString());

        String Type = Df.getValueAt(selectedIndex, 1).toString();
        if (Type.equals("Individual")) {
            this.Individual.isSelected();
        } else if (Type.equals("Corporate")) {
            this.Corporate.isSelected();
        }

        this.Name.setText(Df.getValueAt(selectedIndex, 2).toString());
        this.Delegator.setText(Df.getValueAt(selectedIndex, 3).toString());

        String Nationality = Df.getValueAt(selectedIndex, 4).toString();
        this.Nationality.setSelectedItem(Nationality);

        this.Email.setText(Df.getValueAt(selectedIndex, 5).toString());
        this.Phone1.setText(Df.getValueAt(selectedIndex, 6).toString());
        this.Phone2.setText(Df.getValueAt(selectedIndex, 7).toString());
        this.Safety3.setText(Df.getValueAt(selectedIndex, 8).toString());

        PreparedStatement select;

        try {

            String TIN = this.TIN.getText();

            Connection con = Connect.getConnection();

            select = con.prepareStatement("SELECT Bank, Address, Account, Remark, Depositor, Active FROM customer WHERE TIN = ?");
            select.setString(1, TIN);

            ResultSet rs = select.executeQuery();

            // Check if the item with the given code exists
            if (rs.next()) {
                // Retrieve values from the ResultSet
                String Bank = rs.getString("Bank");
                this.Bank.setText(Bank);

                String Address = rs.getString("Address");
                this.Address.setText(Address);

                String Account = rs.getString("Account");
                this.Account.setText(Account);

                String Remark = rs.getString("Remark");
                this.Remark.setText(Remark);

                String Depositor = rs.getString("Depositor");
                this.Safety2.setText(Depositor);

                String active = rs.getString("Active");
                if (active.equals("Yes")) {
                    this.Use.setSelected(true);
                } else {
                    this.Use.setSelected(false);
                }
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(CustomerM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Account;
    private javax.swing.JTextField Address;
    private java.awt.TextField Bank;
    private javax.swing.JButton Clear;
    private javax.swing.JRadioButton Corporate;
    private javax.swing.JTextField Delegator;
    private javax.swing.JTextField Email;
    private javax.swing.JRadioButton Individual;
    private java.awt.TextField Name;
    private javax.swing.JComboBox<String> Nationality;
    private javax.swing.JTextField Phone1;
    private javax.swing.JTextField Phone2;
    private javax.swing.JTextField Remark;
    private javax.swing.JTextField Safety2;
    private javax.swing.JTextField Safety3;
    private javax.swing.JButton Search;
    private java.awt.TextField TIN;
    private javax.swing.JCheckBox Use;
    private javax.swing.JButton addNew;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton saveItem;
    private javax.swing.JCheckBox srcActive;
    private javax.swing.JTextField srcCode;
    private javax.swing.JTextField srcName;
    // End of variables declaration//GEN-END:variables
}
