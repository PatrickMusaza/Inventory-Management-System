import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Patrick
 */
public class ItemUserS extends javax.swing.JPanel {

    /**
     * Creates new form Item
     */
    public ItemUserS() {
        initComponents();

        generateItemCode();
        table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addNew = new javax.swing.JButton();
        saveItem = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Code = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        Barcode = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Origin = new javax.swing.JComboBox<>();
        Pkg = new javax.swing.JComboBox<>();
        Sale = new javax.swing.JTextField();
        CurrentStock = new javax.swing.JTextField();
        Type = new javax.swing.JComboBox<>();
        Beginning = new javax.swing.JTextField();
        Purchase = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Desc = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Tax = new javax.swing.JComboBox<>();
        QTY = new javax.swing.JComboBox<>();
        Safety = new javax.swing.JTextField();
        Use = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        srcCode = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        srcName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        srcActive = new javax.swing.JCheckBox();
        Search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Item Management");

        addNew.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        addNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/credit-card-add.png"))); // NOI18N
        addNew.setText("New");
        addNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNewMouseClicked(evt);
            }
        });
        addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewActionPerformed(evt);
            }
        });

        saveItem.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        saveItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/floppy-disk.png"))); // NOI18N
        saveItem.setText("Save");
        saveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveItemActionPerformed(evt);
            }
        });

        Exit.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close.png"))); // NOI18N
        Exit.setText("Close");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addNew)
                .addGap(18, 18, 18)
                .addComponent(saveItem)
                .addGap(18, 18, 18)
                .addComponent(Exit)
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addNew)
                    .addComponent(saveItem)
                    .addComponent(Exit))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(136, 131, 131)));

        jLabel4.setText("Item Code");

        jLabel5.setText("Item Name");

        jLabel6.setText("Use Barcode");

        jLabel7.setText("Item Type");

        jLabel8.setText("Purchase Price");

        jLabel9.setText("Beginning Stock");

        jLabel10.setText("Description");

        Code.setEditable(false);
        Code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodeActionPerformed(evt);
            }
        });

        Barcode.setText("Yes");

        jLabel11.setText("Origin");

        jLabel12.setText("Pkg Unit");

        jLabel13.setText("Sale Price");

        jLabel14.setText("Current Stock");

        Origin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rwanda", "China", "USA", "Germany", "Eritrea", "Ethiopia", "Zambia", "India" }));
        Origin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OriginActionPerformed(evt);
            }
        });

        Pkg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bucket", "Bottle", "Basket", "Carton", "Cassette", "Can", "Container", "Jug", "Net", "Roll", "Wooden Case", "Wooden Box" }));
        Pkg.setSelectedIndex(6);

        Sale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SaleKeyTyped(evt);
            }
        });

        CurrentStock.setEditable(false);
        CurrentStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentStockActionPerformed(evt);
            }
        });
        CurrentStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CurrentStockKeyTyped(evt);
            }
        });

        Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asset", "Expense", "Finished Product", "Raw Material", "Service" }));
        Type.setSelectedIndex(2);

        Beginning.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BeginningKeyTyped(evt);
            }
        });

        Purchase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PurchaseKeyTyped(evt);
            }
        });

        Desc.setColumns(20);
        Desc.setRows(5);
        jScrollPane1.setViewportView(Desc);

        jLabel15.setText("Qty Unit");

        jLabel16.setText("Tax Type");

        jLabel17.setText("Safety Stock");

        jLabel18.setText("Use");

        Tax.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A-EX", "B-18%", "C" }));
        Tax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaxActionPerformed(evt);
            }
        });

        QTY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Box", "Gallon ", "Kilogram ", "Litre", "Cubic Metre", "Dozen", "Gram", "Number", "Pair" }));
        QTY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QTYActionPerformed(evt);
            }
        });

        Safety.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SafetyKeyTyped(evt);
            }
        });

        Use.setText("Yes ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel4))
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Code)
                    .addComponent(Name)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Purchase, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Barcode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Type, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Beginning))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Origin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Pkg, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(QTY, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(CurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(Sale, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(1, 1, 1)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Safety)
                                    .addComponent(Tax, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Use, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Barcode)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(Pkg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(QTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Purchase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(Sale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(Tax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(Beginning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(CurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(Safety, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Origin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(Use))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 60, 60)));

        jLabel19.setText("Item Code");

        srcCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcCodeKeyReleased(evt);
            }
        });

        jLabel20.setText("Item Name");

        srcName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcNameKeyReleased(evt);
            }
        });

        jLabel21.setText("Use");

        srcActive.setText("Yes ");

        Search.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/loupe.png"))); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(srcCode, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(srcName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(srcActive, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(Search)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(srcName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(srcActive)
                    .addComponent(Search)
                    .addComponent(srcCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Origin", "Item Type", "Pack Unit", "Qty Unit", "Purchase Price", "Sale Price", "Beginning Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 849, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 780, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    PreparedStatement insert, stock, Current;

    public final String generateItemCode(){
        String Code = "";
        try {
            Connection con = Connect.getConnection();
            if (con != null) {
                PreparedStatement statement = con.prepareStatement("SELECT COUNT(ItemCode) FROM item");
                ResultSet result = statement.executeQuery();

                if (result.next()) {
                    int count = result.getInt(1);
                    Code = "ITM " + (1000 + count + 1);
                    this.Code.setText(Code);
                }
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ItemUserS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        return Code;
    }

    private void table_update() {

        int count;

        try {
            Connection con = Connect.getConnection();

            insert = con.prepareStatement("select * from item");

            ResultSet rs = insert.executeQuery();
            ResultSetMetaData rsmd = (ResultSetMetaData) rs.getMetaData();
            count = rsmd.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int i = 1; i <= count; i++) {

                    v2.add(rs.getString("ItemCode"));
                    v2.add(rs.getString("ItemName"));
                    //v2.add(rs.getString("UseBarcode"));
                    v2.add(rs.getString("Origin"));
                    v2.add(rs.getString("ItemType"));
                    v2.add(rs.getString("PkgUnit"));
                    v2.add(rs.getString("QtyUnit"));
                    v2.add(rs.getString("PurchaseUnit"));
                    v2.add(rs.getString("SalePrice"));
                    //v2.add(rs.getString("TaxType"));
                    v2.add(rs.getString("BeginningStock"));
                    //v2.add(rs.getString("CurrentStock"));
                    //v2.add(rs.getString("SafetyStock"));
                    //v2.add(rs.getString("Description"));
                    //v2.add(rs.getString("Use"));

                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ItemUserS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }


    private void addNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addNewMouseClicked

    private void addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewActionPerformed
        // TODO add your handling code here:

        String input1 = this.Name.getText().trim();
        String input2 = this.Purchase.getText().trim();
        String input3 = this.Sale.getText().trim();
        String input4 = this.Beginning.getText().trim();
        String input5 = this.Safety.getText().trim();
        if (input1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Name.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input2.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Purchase Price.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input3.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Sale Price.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input4.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Beginning Stock.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input5.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Safety Stock.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            String Name = this.Name.getText();
            String Barcode;
            String Origin;
            String Type;
            String Pkg;
            String QTY;
            String Purchase;
            String Sale;
            String Tax;
            String Beginning = this.Beginning.getText();
            String Safety = this.Safety.getText();
            String Desc = this.Desc.getText();
            String Use;
            int index;
            String Code = this.Code.getText();

            String Username = Login.Username.getText();

            this.generateItemCode();

            this.Code.setEditable(false);

            index = this.Origin.getSelectedIndex();
            Origin = this.Origin.getItemAt(index);

            index = this.Type.getSelectedIndex();
            Type = this.Type.getItemAt(index);

            index = this.Pkg.getSelectedIndex();
            Pkg = this.Pkg.getItemAt(index);

            index = this.QTY.getSelectedIndex();
            QTY = this.QTY.getItemAt(index);

            index = this.Tax.getSelectedIndex();
            Tax = this.Tax.getItemAt(index);

            if (this.Barcode.isSelected()) {
                Barcode = "Yes";
            } else {
                Barcode = "No";
            }

            if (this.Use.isSelected()) {
                Use = "Yes";
            } else {
                Use = "No";
            }

            if (this.Purchase == null) {
                Purchase = "0.0";
            } else {
                Purchase = this.Purchase.getText();
            }

            if (this.Sale == null) {
                Sale = "0.0";
            } else {
                Sale = this.Sale.getText();
            }

            try {

                Connection con = Connect.getConnection();

                stock = con.prepareStatement("insert into stock (ItemCode,ItemName,SafetyQty,BeginningStock,UnitPrice,PurchasePrice) values (?,?,?,?,?,?)");

                stock.setString(1, generateItemCode());
                stock.setString(2, Name);
                stock.setString(3, Safety);
                stock.setString(4, Beginning);
                stock.setString(5, Sale);
                stock.setString(6, Purchase);

                stock.executeUpdate();

                CurrentStock currentStock = new CurrentStock();
                float current = currentStock.getCurrentStock(generateItemCode())[0];
                float amount = currentStock.getCurrentStock(generateItemCode())[1];

                Current = con.prepareStatement("update stock set CurrentStock=?, StockAmount=? where ItemCode=?");
                Current.setFloat(1, current);
                Current.setFloat(2, amount);
                Current.setString(3, generateItemCode());

                Current.executeUpdate();

                insert = con.prepareStatement("insert into item (ItemCode,ItemName,UseBarcode,Origin,ItemType,PkgUnit,QtyUnit,PurchaseUnit,SalePrice,TaxType,BeginningStock,SafetyStock,Description,Active, createdBy) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

                insert.setString(1, generateItemCode());
                insert.setString(2, Name);
                insert.setString(3, Barcode);
                insert.setString(4, Origin);
                insert.setString(5, Type);
                insert.setString(6, Pkg);
                insert.setString(7, QTY);
                insert.setString(8, Purchase);
                insert.setString(9, Sale);
                insert.setString(10, Tax);
                insert.setString(11, Beginning);
                insert.setString(12, Safety);
                insert.setString(13, Desc);
                insert.setString(14, Use);
                insert.setString(15, Username);

                insert.executeUpdate();

                Current = con.prepareStatement("update item set CurrentStock=? where ItemCode=?");
                Current.setFloat(1, current);
                Current.setString(2, Code);

                Current.executeUpdate();

                JOptionPane.showMessageDialog(null, "New Item Recorded");
                table_update();

                this.Code.setText("");
                this.Name.setText("");
                this.Barcode.setSelected(false);
                this.Purchase.setText("");
                this.Sale.setText("");
                this.Beginning.setText("");
                this.CurrentStock.setText("");
                this.Safety.setText("");
                this.Desc.setText("");
               this.Use.setSelected(false);
                this.Name.requestFocus();
                generateItemCode();

            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(ItemUserS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addNewActionPerformed

    private void saveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveItemActionPerformed
        // TODO add your handling code here:

        String input1 = this.Name.getText().trim();
        String input2 = this.Purchase.getText().trim();
        String input3 = this.Sale.getText().trim();
        String input4 = this.Beginning.getText().trim();
        String input5 = this.Safety.getText().trim();
        if (input1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Name.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input2.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Purchase Price.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input3.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Sale Price.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input4.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Beginning Stock.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input5.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Item Safety Stock.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();

            try {

                String id = Df.getValueAt(selectedIndex, 0).toString();
                String Name = this.Name.getText();
                String Barcode;
                String Origin;
                String Type;
                String Pkg;
                String QTY;
                String Purchase;
                String Sale;
                String Tax;
                String Beginning = this.Beginning.getText();
                String Safety = this.Safety.getText();
                String Desc = this.Desc.getText();
                String Use;
                int index;

                String Username = Login.Username.getText();

                index = this.Origin.getSelectedIndex();
                Origin = this.Origin.getItemAt(index);

                index = this.Type.getSelectedIndex();
                Type = this.Type.getItemAt(index);

                index = this.Pkg.getSelectedIndex();
                Pkg = this.Pkg.getItemAt(index);

                index = this.QTY.getSelectedIndex();
                QTY = this.QTY.getItemAt(index);

                index = this.Tax.getSelectedIndex();
                Tax = this.Tax.getItemAt(index);

                if (this.Barcode.isSelected()) {
                    Barcode = "Yes";
                } else {
                    Barcode = "No";
                }

                if (this.Use.isSelected()) {
                    Use = "Yes";
                } else {
                    Use = "No";
                }

                if (this.Purchase == null) {
                    Purchase = "0.0";
                } else {
                    Purchase = this.Purchase.getText();
                }

                if (this.Sale == null) {
                    Sale = "0.0";
                } else {
                    Sale = this.Sale.getText();
                }

                Connection con = Connect.getConnection();
                insert = con.prepareStatement("update item set ItemName=?,UseBarcode=?,Origin=?,ItemType=?,PkgUnit=?,QtyUnit=?,PurchaseUnit=?,SalePrice=?,TaxType=?,BeginningStock=?,SafetyStock=?,Description=?,Active=?, createdBy=? where ItemCode=?");
                stock = con.prepareStatement("update stock set ItemName=?,UnitPrice=?,BeginningStock=?,SafetyQty=?,PurchasePrice=? where ItemCode=?");
                insert.setString(1, Name);
                insert.setString(2, Barcode);
                insert.setString(3, Origin);
                insert.setString(4, Type);
                insert.setString(5, Pkg);
                insert.setString(6, QTY);
                insert.setString(7, Purchase);
                insert.setString(8, Sale);
                insert.setString(9, Tax);
                insert.setString(10, Beginning);
                insert.setString(11, Safety);
                insert.setString(12, Desc);
                insert.setString(13, Use);
                insert.setString(14, Username);
                insert.setString(15, id);

                stock.setString(1, Name);
                stock.setString(2, Sale);
                stock.setString(3, Beginning);
                stock.setString(4, Safety);
                stock.setString(5, Purchase);
                stock.setString(6, id);

                insert.executeUpdate();
                stock.executeUpdate();

                CurrentStock currentStock = new CurrentStock();
                float current = currentStock.getCurrentStock(id)[0];
                float amount = currentStock.getCurrentStock(id)[1];

                Current = con.prepareStatement("update stock set CurrentStock=?, StockAmount=? where ItemCode=?");
                Current.setFloat(1, current);
                Current.setFloat(2, amount);
                Current.setString(3, id);

                Current.executeUpdate();

                Current = con.prepareStatement("update item set CurrentStock=? where ItemCode=?");
                Current.setFloat(1, current);
                Current.setString(2, id);

                Current.executeUpdate();

                JOptionPane.showMessageDialog(null, "Item Updated!");
                table_update();

                this.Code.setText("");
                this.Name.setText("");
                this.Barcode.setSelected(false);
                this.Purchase.setText("");
                this.Sale.setText("");
                this.Beginning.setText("");
                this.CurrentStock.setText("");
                this.Safety.setText("");
                this.Desc.setText("");
               this.Use.setSelected(false);
                this.Code.requestFocus();
                generateItemCode();

            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(ItemUserS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_saveItemActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:

        this.setVisible(false);
    }//GEN-LAST:event_ExitActionPerformed

    private void CodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodeActionPerformed

    private void OriginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OriginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OriginActionPerformed

    private void SaleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SaleKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_SaleKeyTyped

    private void CurrentStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CurrentStockActionPerformed

    private void CurrentStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CurrentStockKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_CurrentStockKeyTyped

    private void BeginningKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BeginningKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_BeginningKeyTyped

    private void PurchaseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PurchaseKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_PurchaseKeyTyped

    private void TaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TaxActionPerformed

    private void QTYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QTYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QTYActionPerformed

    private void SafetyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SafetyKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_SafetyKeyTyped

    private void srcCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcCodeKeyReleased
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(srcCode.getText(), 0));
    }//GEN-LAST:event_srcCodeKeyReleased

    private void srcNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcNameKeyReleased
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(srcName.getText(), 1));
    }//GEN-LAST:event_srcNameKeyReleased

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(srcCode.getText(), 0));
        obj.setRowFilter(RowFilter.regexFilter(srcName.getText(), 1));
        //obj.setRowFilter(RowFilter.regexFilter(srcActive.getText()));
    }//GEN-LAST:event_SearchActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        this.Code.setText(Df.getValueAt(selectedIndex, 0).toString());
        this.Name.setText(Df.getValueAt(selectedIndex, 1).toString());

        String Origin = Df.getValueAt(selectedIndex, 2).toString();
        this.Origin.setSelectedItem(Origin);

        String Type = Df.getValueAt(selectedIndex, 3).toString();
        this.Type.setSelectedItem(Type);

        String Pkg = Df.getValueAt(selectedIndex, 4).toString();
        this.Pkg.setSelectedItem(Pkg);

        String QTY = Df.getValueAt(selectedIndex, 5).toString();
        this.QTY.setSelectedItem(QTY);

        this.Purchase.setText(Df.getValueAt(selectedIndex, 6).toString());
        this.Sale.setText(Df.getValueAt(selectedIndex, 7).toString());
        this.Beginning.setText(Df.getValueAt(selectedIndex, 8).toString());

        PreparedStatement select;

        try {

            String Code = this.Code.getText();

            Connection con = Connect.getConnection();

            select = con.prepareStatement("SELECT UseBarcode, TaxType, CurrentStock, SafetyStock, Description, Active FROM item WHERE ItemCode = ?");
            select.setString(1, Code);

            ResultSet rs = select.executeQuery();

            // Check if the item with the given code exists
            if (rs.next()) {
                // Retrieve values from the ResultSet
                String barcode = rs.getString("UseBarcode");
                if (barcode.equals("Yes")) {
                    this.Barcode.setSelected(true);
                } else {
                    this.Barcode.setSelected(false);
                }

                String taxType = rs.getString("TaxType");
                this.Tax.setSelectedItem(taxType);

                String currentStock = rs.getString("CurrentStock");
                this.CurrentStock.setText(currentStock);

                String safetyStock = rs.getString("SafetyStock");
                this.Safety.setText(safetyStock);

                String description = rs.getString("Description");
                this.Desc.setText(description);

                String active = rs.getString("Active");
                if (active.equals("Yes")) {
                    this.Use.setSelected(true);
                } else {
                    this.Use.setSelected(false);
                }
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ItemUserS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Barcode;
    private javax.swing.JTextField Beginning;
    private javax.swing.JTextField Code;
    private javax.swing.JTextField CurrentStock;
    private javax.swing.JTextArea Desc;
    private javax.swing.JButton Exit;
    private javax.swing.JTextField Name;
    private javax.swing.JComboBox<String> Origin;
    private javax.swing.JComboBox<String> Pkg;
    private javax.swing.JTextField Purchase;
    private javax.swing.JComboBox<String> QTY;
    private javax.swing.JTextField Safety;
    private javax.swing.JTextField Sale;
    private javax.swing.JButton Search;
    private javax.swing.JComboBox<String> Tax;
    private javax.swing.JComboBox<String> Type;
    private javax.swing.JCheckBox Use;
    private javax.swing.JButton addNew;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton saveItem;
    private javax.swing.JCheckBox srcActive;
    private javax.swing.JTextField srcCode;
    private javax.swing.JTextField srcName;
    // End of variables declaration//GEN-END:variables
}
