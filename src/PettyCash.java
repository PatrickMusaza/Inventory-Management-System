
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Patrick
 */
public class PettyCash extends javax.swing.JPanel {

    private boolean isNew = false;

    /**
     * Creates new form PettyCash
     */
    public PettyCash() {
        initComponents();

        table_update();

        this.Purpose.setEditable(false);
        this.Amount.setEditable(false);
        this.GivenBy.setEditable(false);
        this.ReceivedBy.setEditable(false);
        this.RefNo.setEditable(false);
        this.TxnId.setEditable(false);
        this.InvoiceNo.setEditable(false);
        this.Preview.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        newPetty = new javax.swing.JButton();
        savePetty = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        IN = new javax.swing.JRadioButton();
        OUT = new javax.swing.JRadioButton();
        jLabel35 = new javax.swing.JLabel();
        Purpose = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        GivenBy = new javax.swing.JTextField();
        ReceivedBy = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        Amount = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        RefNo = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        TxnId = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        InvoiceNo = new javax.swing.JTextField();
        Proof = new javax.swing.JButton();
        previewPanel = new javax.swing.JPanel();
        Preview = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        TxnSrc = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        start = new com.toedter.calendar.JDateChooser();
        end = new com.toedter.calendar.JDateChooser();
        jLabel45 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Petty Cash Management");

        newPetty.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        newPetty.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/credit-card-add.png"))); // NOI18N
        newPetty.setText("New");
        newPetty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newPettyMouseClicked(evt);
            }
        });
        newPetty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPettyActionPerformed(evt);
            }
        });

        savePetty.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        savePetty.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/floppy-disk.png"))); // NOI18N
        savePetty.setText("Save");
        savePetty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePettyActionPerformed(evt);
            }
        });

        Exit.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close.png"))); // NOI18N
        Exit.setText("Clear");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newPetty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(savePetty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Exit)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Exit)
                        .addComponent(savePetty)
                        .addComponent(newPetty)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel34.setText("Type");

        IN.setText("IN");
        IN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INActionPerformed(evt);
            }
        });

        OUT.setText("OUT");
        OUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OUTActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel35.setText("Purpose");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel36.setText("Given By");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel37.setText("Received By");

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel38.setText("Amount");

        Amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AmountKeyTyped(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel40.setText("Ref No.");

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel41.setText("Txn ID");

        TxnId.setEditable(false);

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel42.setText("Invoice No.");

        Proof.setBackground(new java.awt.Color(0, 102, 0));
        Proof.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Proof.setForeground(new java.awt.Color(255, 255, 255));
        Proof.setText("<html>\n<p>Upload Proof of Payment</br>\n<span><center>(If Any)</center></span></p>\n</html>");
        Proof.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProofActionPerformed(evt);
            }
        });

        previewPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Preview.setText("Uknown File Path");
        Preview.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
        previewPanel.setLayout(previewPanelLayout);
        previewPanelLayout.setHorizontalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Preview, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );
        previewPanelLayout.setVerticalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Preview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Purpose)
                    .addComponent(GivenBy)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(IN, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OUT, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ReceivedBy)
                    .addComponent(Amount))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Proof, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InvoiceNo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TxnId, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(RefNo, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(IN)
                            .addComponent(OUT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(Purpose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(GivenBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(ReceivedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel38)
                            .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addComponent(previewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(RefNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(TxnId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(InvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Proof)))
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel43.setText("Txn ID");

        TxnSrc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxnSrcKeyReleased(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel44.setText("<html>\n<p>Starting </br>\n<span>Date</span></p>\n</html>");

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel45.setText("<html> <p>Ending </br> <span>Date</span></p> </html>");

        Search.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/loupe.png"))); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TxnSrc)
                .addGap(76, 76, 76)
                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Search)
                .addGap(277, 277, 277))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Search)
                    .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel43)
                        .addComponent(TxnSrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ref No.", "Description", "Date", "IN", "Out", "Balance", "Invoice No", "Proof of Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
    }// </editor-fold>//GEN-END:initComponents

    PreparedStatement insert, Bal;

    NumberFormat formatter = NumberFormat.getInstance();

    public final String generateTxnCode() {
        String Code = "";
        try {
            Connection con = Connect.getConnection();
            if (con != null) {
                PreparedStatement statement = con.prepareStatement("SELECT COUNT(TxnId) FROM pettycash");
                ResultSet result = statement.executeQuery();

                if (result.next()) {
                    int count = result.getInt(1);
                    Code = "TXN X" + (000 + count + 1);
                    this.TxnId.setText(Code);
                }
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        return Code;
    }

    private void table_update() {

        int count;

        try {
            Connection con = Connect.getConnection();

            insert = con.prepareStatement("select * from pettycash");

            ResultSet rs = insert.executeQuery();
            ResultSetMetaData rsmd = (ResultSetMetaData) rs.getMetaData();
            count = rsmd.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int i = 1; i <= count; i++) {

                    v2.add(rs.getString("TxnId"));
                    v2.add(rs.getString("RefNo"));
                    v2.add(rs.getString("Purpose"));
                    v2.add(rs.getDate("createdAt"));
                    v2.add(formatter.format(rs.getDouble("PIN")));
                    v2.add(formatter.format(rs.getDouble("POUT")));
                    v2.add(formatter.format(rs.getDouble("Balance")));
                    v2.add(rs.getString("InvoiceNo"));
                    v2.add(rs.getString("file_path"));

                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }


    private void newPettyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPettyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_newPettyMouseClicked

    private void newPettyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPettyActionPerformed
        // TODO add your handling code here:

        this.Purpose.setEditable(true);
        this.Amount.setEditable(true);
        this.GivenBy.setEditable(true);
        this.ReceivedBy.setEditable(true);
        this.RefNo.setEditable(true);
        this.TxnId.setEditable(true);
        this.InvoiceNo.setEditable(true);
        this.Preview.setText("Uknown File Path");

        generateTxnCode();
        isNew = true;
    }//GEN-LAST:event_newPettyActionPerformed

    private void savePettyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePettyActionPerformed
        // TODO add your handling code here:

        if (!ValidateForm.isInternetReachable()) {
            try {
                Connection con = Connect.getConnection();
                con.close();
                JOptionPane.showMessageDialog(null, "There is no internet Connection!", "Internet Connectivity", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            int selectedRow = jTable1.getSelectedRow();

            if (isNew && selectedRow < 0) {

                boolean input1 = this.IN.isSelected();
                boolean input2 = this.OUT.isSelected();
                String input3 = this.Purpose.getText().trim();
                String input4 = this.GivenBy.getText().trim();
                String input5 = this.ReceivedBy.getText().trim();
                String input6 = this.Amount.getText().trim();
                String input7 = this.RefNo.getText().trim();
                String input8 = this.TxnId.getText().trim();
                String input9 = this.InvoiceNo.getText().trim();
                if ((input1 == false) && (input2 == false)) {
                    JOptionPane.showMessageDialog(null, "Please Select the Type of Transaction.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input2 == true) && input3.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter the Purpose of this Transaction.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input1 == true) && input4.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter the Person who Issued the Money.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input1 == true) && input5.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter the Person who Received the Money.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (input6.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Transaction Amount.", "Error", JOptionPane.ERROR_MESSAGE);
                } /*else if (input7.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please Enter Transaction Reference No.", "Error", JOptionPane.ERROR_MESSAGE);
        } */ else if (input8.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Transaction ID.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input2 == true) && input9.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Transaction Invoice No", "Error", JOptionPane.ERROR_MESSAGE);
                } else {

                    String Purpose = this.Purpose.getText();
                    String GivenBy = this.GivenBy.getText();
                    String ReceivedBy = this.ReceivedBy.getText();
                    String Amount = this.Amount.getText();
                    String RefNo = this.RefNo.getText();
                    String TxnId = this.TxnId.getText();
                    String InvoiceNo = this.InvoiceNo.getText();
                    String Path = this.Preview.getText();
                    double bal = 0, in, out;

                    if (input1 == true) {

                        try {

                            Connection con = Connect.getConnection();

                            insert = con.prepareStatement("insert into pettycash (PIN,Purpose,GivenBy,ReceivedBy,RefNo,TxnId,InvoiceNo,Balance,file_path) values (?,?,?,?,?,?,?,?,?)");

                            insert.setString(1, Amount);
                            insert.setString(2, Purpose);
                            insert.setString(3, GivenBy);
                            insert.setString(4, ReceivedBy);
                            insert.setString(5, RefNo);
                            insert.setString(6, TxnId);
                            insert.setString(7, InvoiceNo);
                            insert.setDouble(8, bal);
                            insert.setString(9, Path);

                            insert.executeUpdate();

                            Bal = con.prepareStatement("select SUM(PIN) as PIN, SUM(POUT) as POUT from pettycash");

                            ResultSet rs = Bal.executeQuery();

                            if (rs.next()) {
                                out = rs.getDouble("POUT");
                                in = rs.getDouble("PIN");
                                bal = in - out;
                            }

                            insert = con.prepareStatement("update pettycash set Balance=? where TxnId=?");
                            insert.setDouble(1, bal);
                            insert.setString(2, TxnId);

                            insert.executeUpdate();

                            insert = con.prepareStatement("insert into expense(ID,Name,Description,Source,Ref,Amount) values (?,?,?,?,?,?)");
                            insert.setString(1, TxnId);
                            insert.setString(2, Purpose);
                            insert.setString(3, GivenBy);
                            insert.setString(4, "Cash");
                            insert.setString(5, RefNo);
                            insert.setString(6, Amount);

                            insert.executeUpdate();
                            
                            JOptionPane.showMessageDialog(null, "New Petty Cash Transaction Recorded");
                            table_update();

                            this.IN.setSelected(false);
                            this.OUT.setSelected(false);
                            this.Purpose.setText("");
                            this.GivenBy.setText("");
                            this.ReceivedBy.setText("");
                            this.Amount.setText("");
                            this.RefNo.setText("");
                            this.TxnId.setText("");
                            this.InvoiceNo.setText("");
                            this.Preview.setText("Unknown File Path");
                            this.Purpose.requestFocus();
                            generateTxnCode();

                        } catch (SQLException ex) {
                            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                        }
                    }

                    if (input2 == true) {

                        try {

                            Connection con = Connect.getConnection();

                            insert = con.prepareStatement("insert into pettycash (POUT,Purpose,GivenBy,ReceivedBy,RefNo,TxnId,InvoiceNo,Balance,file_path) values (?,?,?,?,?,?,?,?,?)");

                            insert.setString(1, Amount);
                            insert.setString(2, Purpose);
                            insert.setString(3, GivenBy);
                            insert.setString(4, ReceivedBy);
                            insert.setString(5, RefNo);
                            insert.setString(6, TxnId);
                            insert.setString(7, InvoiceNo);
                            insert.setDouble(8, bal);
                            insert.setString(9, Path);

                            insert.executeUpdate();

                            Bal = con.prepareStatement("select SUM(PIN) as PIN, SUM(POUT) as POUT from pettycash");

                            ResultSet rs = Bal.executeQuery();

                            if (rs.next()) {
                                out = rs.getDouble("POUT");
                                in = rs.getDouble("PIN");
                                bal = in - out;
                            }

                            insert = con.prepareStatement("update pettycash set Balance=? where TxnId=?");
                            insert.setDouble(1, bal);
                            insert.setString(2, TxnId);

                            insert.executeUpdate();

                            JOptionPane.showMessageDialog(null, "New Petty Cash Transaction Recorded");
                            table_update();

                            this.IN.setSelected(false);
                            this.OUT.setSelected(false);
                            this.Purpose.setText("");
                            this.GivenBy.setText("");
                            this.ReceivedBy.setText("");
                            this.Amount.setText("");
                            this.RefNo.setText("");
                            this.TxnId.setText("");
                            this.InvoiceNo.setText("");
                            this.Preview.setText("Uknown File Path");
                            this.Purpose.requestFocus();
                            generateTxnCode();

                        } catch (SQLException ex) {
                            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                        }
                    }
                }
            } else {
                boolean input1 = this.IN.isSelected();
                boolean input2 = this.OUT.isSelected();
                String input3 = this.Purpose.getText().trim();
                String input4 = this.GivenBy.getText().trim();
                String input5 = this.ReceivedBy.getText().trim();
                String input6 = this.Amount.getText().trim();
                String input7 = this.RefNo.getText().trim();
                String input8 = this.TxnId.getText().trim();
                String input9 = this.InvoiceNo.getText().trim();
                if ((input1 == false) && (input2 == false)) {
                    JOptionPane.showMessageDialog(null, "Please Select the Type of Transaction.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input2 == true) && input3.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter the Purpose of this Transaction.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input1 == true) && input4.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter the Person who Issued the Money.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input1 == true) && input5.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter the Person who Received the Money.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (input6.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Transaction Amount.", "Error", JOptionPane.ERROR_MESSAGE);
                } /*else if (input7.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please Enter Transaction Reference No.", "Error", JOptionPane.ERROR_MESSAGE);
        } */ else if (input8.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Transaction ID.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if ((input2 == true) && input9.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please Enter Transaction Invoice No", "Error", JOptionPane.ERROR_MESSAGE);
                } else {

                    String Purpose = this.Purpose.getText();
                    String GivenBy = this.GivenBy.getText();
                    String ReceivedBy = this.ReceivedBy.getText();
                    String Amount = this.Amount.getText();
                    String RefNo = this.RefNo.getText();
                    String TxnId = this.TxnId.getText();
                    String InvoiceNo = this.InvoiceNo.getText();
                    String Path = this.Preview.getText();
                    double bal = 0, in, out;

                    if (input1 == true) {
                        try {

                            Connection con = Connect.getConnection();

                            insert = con.prepareStatement("update pettycash set PIN=?,Purpose=?,GivenBy=?,ReceivedBy=?,RefNo=?,InvoiceNo=?,file_path=? where TxnId=?");

                            insert.setString(1, Amount);
                            insert.setString(2, Purpose);
                            insert.setString(3, GivenBy);
                            insert.setString(4, ReceivedBy);
                            insert.setString(5, RefNo);
                            insert.setString(6, InvoiceNo);
                            insert.setString(7, Path);
                            insert.setString(8, TxnId);

                            insert.executeUpdate();

                            Bal = con.prepareStatement("select SUM(PIN) as PIN, SUM(POUT) as POUT from pettycash");

                            ResultSet rs = Bal.executeQuery();

                            if (rs.next()) {
                                out = rs.getDouble("POUT");
                                in = rs.getDouble("PIN");
                                bal = in - out;
                            }

                            insert = con.prepareStatement("update pettycash set Balance=? where TxnId=?");
                            insert.setDouble(1, bal);
                            insert.setString(2, TxnId);

                            insert.executeUpdate();

                            insert = con.prepareStatement("update expense set Name=?,Description=?,Source=?,Ref=?,Amount=? where ID=?");
                            insert.setString(1, Purpose);
                            insert.setString(2, GivenBy);
                            insert.setString(3, "Cash");
                            insert.setString(4, RefNo);
                            insert.setString(5, Amount);
                            insert.setString(6, TxnId);

                            insert.executeUpdate();
                            
                            JOptionPane.showMessageDialog(null, "Petty Cash Transaction Updated!");
                            table_update();

                            this.IN.setSelected(false);
                            this.OUT.setSelected(false);
                            this.Purpose.setText("");
                            this.GivenBy.setText("");
                            this.ReceivedBy.setText("");
                            this.Amount.setText("");
                            this.RefNo.setText("");
                            this.TxnId.setText("");
                            this.InvoiceNo.setText("");
                            this.Preview.setText("Unknown File Path");
                            this.Purpose.requestFocus();
                            generateTxnCode();

                        } catch (SQLException ex) {
                            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                        }
                    }
                    if (input2 == true) {
                        try {

                            Connection con = Connect.getConnection();

                            insert = con.prepareStatement("update pettycash set POUT=?,Purpose=?,GivenBy=?,ReceivedBy=?,RefNo=?,InvoiceNo=?,file_path=? where TxnId=?");

                            insert.setString(1, Amount);
                            insert.setString(2, Purpose);
                            insert.setString(3, GivenBy);
                            insert.setString(4, ReceivedBy);
                            insert.setString(5, RefNo);
                            insert.setString(6, InvoiceNo);
                            insert.setString(7, Path);
                            insert.setString(8, TxnId);

                            insert.executeUpdate();

                            Bal = con.prepareStatement("select SUM(PIN) as PIN, SUM(POUT) as POUT from pettycash");

                            ResultSet rs = Bal.executeQuery();

                            if (rs.next()) {
                                out = rs.getDouble("POUT");
                                in = rs.getDouble("PIN");
                                bal = in - out;
                            }

                            insert = con.prepareStatement("update pettycash set Balance=? where TxnId=?");
                            insert.setDouble(1, bal);
                            insert.setString(2, TxnId);

                            insert.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Petty Cash Transaction Updated!");
                            table_update();

                            this.IN.setSelected(false);
                            this.OUT.setSelected(false);
                            this.Purpose.setText("");
                            this.GivenBy.setText("");
                            this.ReceivedBy.setText("");
                            this.Amount.setText("");
                            this.RefNo.setText("");
                            this.TxnId.setText("");
                            this.InvoiceNo.setText("");
                            this.Preview.setText("Unknown File Path");
                            this.Purpose.requestFocus();
                            generateTxnCode();

                        } catch (SQLException ex) {
                            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_savePettyActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:

        this.Purpose.setText("");
        this.Amount.setText("");
        this.GivenBy.setText("");
        this.ReceivedBy.setText("");
        this.RefNo.setText("");
        this.TxnId.setText("");
        this.InvoiceNo.setText("");
        this.Preview.setText("");
        this.OUT.setSelected(false);
        this.IN.setSelected(false);

        generateTxnCode();

    }//GEN-LAST:event_ExitActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:

        try {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String startDateStr = sdf.format(start.getDate());
            String endDateStr = sdf.format(end.getDate());

            Connection con = Connect.getConnection();
            String search = "SELECT * FROM pettycash WHERE createdAt >= ? AND createdAt <= ?";
            PreparedStatement srch = con.prepareStatement(search);
            srch.setString(1, startDateStr);
            srch.setString(2, endDateStr);
            ResultSet rss = srch.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rss));
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_SearchActionPerformed

    private void INActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INActionPerformed
        // TODO add your handling code here: 
        if (evt.getSource() == this.IN) {
            this.IN.setSelected(true);
            this.OUT.setSelected(false);
        }
    }//GEN-LAST:event_INActionPerformed

    private void OUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OUTActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == this.OUT) {
            this.IN.setSelected(false);
            this.OUT.setSelected(true);
        }
    }//GEN-LAST:event_OUTActionPerformed

    private void AmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AmountKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }

    }//GEN-LAST:event_AmountKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        String Type = Df.getValueAt(selectedIndex, 4).toString();
        String Type1 = Df.getValueAt(selectedIndex, 5).toString();

        this.TxnId.setText(Df.getValueAt(selectedIndex, 0).toString());
        this.RefNo.setText(Df.getValueAt(selectedIndex, 1).toString());
        this.Purpose.setText(Df.getValueAt(selectedIndex, 2).toString());
        this.InvoiceNo.setText(Df.getValueAt(selectedIndex, 7).toString());
        this.Preview.setText(Df.getValueAt(selectedIndex, 8).toString());

        PreparedStatement select;

        try {

            String Code = this.TxnId.getText();

            Connection con = Connect.getConnection();

            select = con.prepareStatement("SELECT GivenBy, ReceivedBy from pettycash WHERE TxnId = ?");
            select.setString(1, Code);

            ResultSet rs = select.executeQuery();

            if (rs.next()) {

                String GivenBy = rs.getString("GivenBy");
                this.GivenBy.setText(GivenBy);

                String ReceivedBy = rs.getString("ReceivedBy");
                this.ReceivedBy.setText(ReceivedBy);
            }

            if (Type.equals("0")) {
                this.Amount.setText(Df.getValueAt(selectedIndex, 5).toString().replace(",", ""));
                this.OUT.setSelected(true);
                this.IN.setSelected(false);
            } else if (Type1.equals("0")) {
                this.Amount.setText(Df.getValueAt(selectedIndex, 4).toString().replace(",", ""));
                this.IN.setSelected(true);
                this.OUT.setSelected(false);
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(PettyCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void TxnSrcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxnSrcKeyReleased
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(TxnSrc.getText(), 0));

    }//GEN-LAST:event_TxnSrcKeyReleased

    private void ProofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProofActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif", "bmp"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("Text files", "txt"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("PDF files", "pdf"));

        int returnValue = fileChooser.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            if (isImageFile(selectedFile)) {
                displayImage(selectedFile);
            } else if (isTextFile(selectedFile)) {
                displayText(selectedFile);
            } else if (isPDFFile(selectedFile)) {
                openPDF(selectedFile);
            } else {
                JOptionPane.showMessageDialog(null, "Unsupported file format.");
            }
        }
    }//GEN-LAST:event_ProofActionPerformed

    private boolean isImageFile(File file) {
        String name = file.getName().toLowerCase();
        return name.endsWith(".jpg") || name.endsWith(".jpeg") || name.endsWith(".png") || name.endsWith(".gif") || name.endsWith(".bmp");
    }

    private boolean isTextFile(File file) {
        String name = file.getName().toLowerCase();
        return name.endsWith(".txt");
    }

    private boolean isPDFFile(File file) {
        String name = file.getName().toLowerCase();
        return name.endsWith(".pdf");
    }

    private void displayImage(File file) {
        try {
            Desktop.getDesktop().open(file);
            this.Preview.setText(file.getAbsolutePath());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error loading image: " + e.getMessage());
        }
    }

    private void displayText(File file) {
        try {
            Desktop.getDesktop().open(file);
            this.Preview.setText(file.getAbsolutePath());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error Reading Text file: " + e.getMessage());
        }
    }

    private void openPDF(File file) {
        try {
            Desktop.getDesktop().open(file);
            this.Preview.setText(file.getAbsolutePath());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error opening PDF file: " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Amount;
    private javax.swing.JButton Exit;
    private javax.swing.JTextField GivenBy;
    private javax.swing.JRadioButton IN;
    private javax.swing.JTextField InvoiceNo;
    private javax.swing.JRadioButton OUT;
    private javax.swing.JLabel Preview;
    private javax.swing.JButton Proof;
    private javax.swing.JTextField Purpose;
    private javax.swing.JTextField ReceivedBy;
    private javax.swing.JTextField RefNo;
    private javax.swing.JButton Search;
    private javax.swing.JTextField TxnId;
    private javax.swing.JTextField TxnSrc;
    private com.toedter.calendar.JDateChooser end;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton newPetty;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JButton savePetty;
    private com.toedter.calendar.JDateChooser start;
    // End of variables declaration//GEN-END:variables
}
