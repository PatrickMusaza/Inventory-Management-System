import java.sql.ResultSetMetaData;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Patrick
 */
public class Import extends javax.swing.JPanel {

    /**
     * Creates new form Import
     */
    public Import() {
        initComponents();

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String todayDate = dateFormat.format(new Date());

        DeclDate.setText(todayDate);

        table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        OpCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ItemDesc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        DeclDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Supplier = new javax.swing.JTextField();
        Seq = new javax.swing.JTextField();
        Agent = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        TaxPayerName = new javax.swing.JTextField();
        HSCode = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ItemName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        ItemCode = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        GrossWT = new javax.swing.JTextField();
        Origin = new javax.swing.JTextField();
        Export = new javax.swing.JTextField();
        NetWT = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        PkgQty = new javax.swing.JTextField();
        InvoiceAmt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        Qty = new javax.swing.JTextField();
        InvoiceCurrency = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        Ratio = new javax.swing.JTextField();
        Unit = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        Approvedate = new javax.swing.JTextField();
        addNew = new javax.swing.JButton();
        Approve = new javax.swing.JButton();
        Split = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        Approval = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        SuppName = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        searchBetween = new javax.swing.JButton();
        startDate = new com.toedter.calendar.JDateChooser();
        endDate = new com.toedter.calendar.JDateChooser();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Import Management");

        Exit.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close.png"))); // NOI18N
        Exit.setText("Close");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Exit)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Exit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Op Code");

        OpCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpCodeActionPerformed(evt);
            }
        });
        OpCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OpCodeKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Item Desc");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Decl Date");

        DeclDate.setEditable(false);
        DeclDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeclDateActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Supplier");

        Seq.setEditable(false);
        Seq.setText("1");
        Seq.setToolTipText("");
        Seq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeqActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Agent");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Seq");

        HSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HSCodeActionPerformed(evt);
            }
        });
        HSCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HSCodeKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("HS Code");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Tax Payer Name");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Item Code");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Item Name");

        ItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemCodeActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Gross WT");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Origin");

        GrossWT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                GrossWTKeyTyped(evt);
            }
        });

        Origin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OriginActionPerformed(evt);
            }
        });

        Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportActionPerformed(evt);
            }
        });

        NetWT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NetWTKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Export");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Net WT");

        PkgQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PkgQtyActionPerformed(evt);
            }
        });
        PkgQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PkgQtyKeyTyped(evt);
            }
        });

        InvoiceAmt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InvoiceAmtKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("Pkg Qty");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Invoice AMT");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setText("Qty");

        Qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QtyActionPerformed(evt);
            }
        });
        Qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                QtyKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setText("Invoice Currency");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Ratio");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("Unit");

        Ratio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RatioKeyTyped(evt);
            }
        });

        Unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnitActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setText("Approval Status");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("Approve/Cancel Date");

        Approvedate.setEditable(false);

        addNew.setBackground(new java.awt.Color(153, 153, 153));
        addNew.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        addNew.setText("New Import");
        addNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNewMouseClicked(evt);
            }
        });
        addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewActionPerformed(evt);
            }
        });

        Approve.setBackground(new java.awt.Color(0, 153, 0));
        Approve.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        Approve.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/verified.png"))); // NOI18N
        Approve.setText("Approved");
        Approve.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveActionPerformed(evt);
            }
        });

        Split.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        Split.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cogwheel.png"))); // NOI18N
        Split.setText("Split");
        Split.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SplitActionPerformed(evt);
            }
        });

        Cancel.setBackground(new java.awt.Color(204, 0, 0));
        Cancel.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close.png"))); // NOI18N
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        Approval.setEditable(false);
        Approval.setText("Waiting Approval");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Unit, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OpCode, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeclDate, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Seq, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HSCode, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Origin, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Export, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PkgQty, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Supplier, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                                    .addComponent(ItemDesc)
                                    .addComponent(Agent)
                                    .addComponent(TaxPayerName)
                                    .addComponent(ItemName)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(GrossWT, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                            .addComponent(NetWT)
                                            .addComponent(InvoiceAmt)
                                            .addComponent(InvoiceCurrency))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Approvedate)
                                                    .addComponent(Approval)))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(addNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Approve)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Split, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Cancel))))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(Ratio, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(OpCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(ItemDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(DeclDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(Seq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(Agent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(HSCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(TaxPayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(Origin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(GrossWT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Export, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)
                                .addComponent(NetWT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(Approval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(Approvedate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(PkgQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(InvoiceAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(InvoiceCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(Unit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(Ratio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Split, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Approve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addNew, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel33.setText("Date");

        SuppName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuppNameActionPerformed(evt);
            }
        });
        SuppName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SuppNameKeyReleased(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setText("Status");

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Approved", "Waiting Approval", "Canceled" }));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });
        status.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                statusKeyReleased(evt);
            }
        });

        searchBetween.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        searchBetween.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/loupe.png"))); // NOI18N
        searchBetween.setText("Search");
        searchBetween.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBetweenMouseClicked(evt);
            }
        });
        searchBetween.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBetweenActionPerformed(evt);
            }
        });

        startDate.setMaximumSize(new java.awt.Dimension(90, 30));

        endDate.setMaximumSize(new java.awt.Dimension(90, 30));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel35.setText("-");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setText("Supplier Name");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endDate, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SuppName, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139)
                .addComponent(searchBetween)
                .addGap(193, 193, 193))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel33)
                                .addComponent(SuppName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel34)
                                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchBetween)
                                .addComponent(jLabel36)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Declare Date", "Op COde", "Decl No.", "Item Seq", "HS Code", "Item Desc", "Origin", "Export Country", "Pkg Qty", "Qty", "Supplier", "Gross WT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1198, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 861, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    PreparedStatement insert;

    private void table_update() {

        int count;

        try {
            Connection con = Connect.getConnection();

            insert = con.prepareStatement("select * from import");

            ResultSet rs = insert.executeQuery();
            ResultSetMetaData rsmd = (ResultSetMetaData) rs.getMetaData();
            count = rsmd.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int i = 1; i <= count; i++) {

                    v2.add(rs.getString("Status"));
                    v2.add(rs.getString("DeclDate"));
                    v2.add(rs.getString("OpCode"));
                    v2.add(rs.getString("Agent"));
                    v2.add(rs.getString("Seq"));
                    v2.add(rs.getString("HsCode"));
                    v2.add(rs.getString("ItemDesc"));
                    v2.add(rs.getString("Origin"));
                    v2.add(rs.getString("Export"));
                    v2.add(rs.getString("PkgQty"));
                    v2.add(rs.getString("Qty"));
                    v2.add(rs.getString("Supplier"));
                    v2.add(rs.getString("GrossWT"));

                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ItemM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:

        this.setVisible(false);
    }//GEN-LAST:event_ExitActionPerformed

    private void OpCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OpCodeActionPerformed

    private void OpCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OpCodeKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_OpCodeKeyTyped

    private void DeclDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeclDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeclDateActionPerformed

    private void SeqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SeqActionPerformed

    private void HSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HSCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HSCodeActionPerformed

    private void HSCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HSCodeKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_HSCodeKeyTyped

    private void ItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemCodeActionPerformed

    private void GrossWTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrossWTKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_GrossWTKeyTyped

    private void OriginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OriginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OriginActionPerformed

    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExportActionPerformed

    private void NetWTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NetWTKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_NetWTKeyTyped

    private void PkgQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PkgQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PkgQtyActionPerformed

    private void PkgQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PkgQtyKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_PkgQtyKeyTyped

    private void InvoiceAmtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InvoiceAmtKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_InvoiceAmtKeyTyped

    private void QtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QtyActionPerformed

    private void QtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QtyKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_QtyKeyTyped

    private void RatioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RatioKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_RatioKeyTyped

    private void UnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnitActionPerformed

    private void addNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addNewMouseClicked

    private void addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewActionPerformed
        // TODO add your handling code here:

        String input1 = this.OpCode.getText().trim();
        String input2 = this.HSCode.getText().trim();
        String input3 = this.Origin.getText().trim();
        String input4 = this.Export.getText().trim();
        String input5 = this.PkgQty.getText().trim();
        String input6 = this.ItemCode.getText().trim();
        String input7 = this.Qty.getText().trim();
        String input8 = this.ItemDesc.getText().trim();
        String input9 = this.Supplier.getText().trim();
        String input10 = this.InvoiceAmt.getText().trim();
        JFrame frame = new JFrame();
        if (input1.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Op COde.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input2.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter HS CODE.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input3.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Origin.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input4.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Export.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input5.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Pkg Qty.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input6.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Item Code.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input7.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Qty.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input8.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Item Description.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input9.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Supplier Name.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (input10.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Please Enter Invoice Amount.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            String OpCode = this.OpCode.getText();
            String DeclDate = this.DeclDate.getText();
            String Seq = this.Seq.getText();
            String HsCode = this.HSCode.getText();
            String ItemCode = this.ItemCode.getText();
            String Origin = this.Origin.getText();
            String Export = this.Export.getText();
            String PkgQty = this.PkgQty.getText();
            String Qty = this.Qty.getText();
            String Unit = this.Unit.getText();
            String ItemDesc = this.ItemDesc.getText();
            String Supplier = this.Supplier.getText();
            String Agent = this.Agent.getText();
            String TaxPayerName = this.TaxPayerName.getText();
            String ItemName = this.ItemName.getText();
            String GrossWT = this.GrossWT.getText();
            String NetWT = this.NetWT.getText();
            String InvoiceAmt = this.InvoiceAmt.getText();
            String InvoiceCurrency = this.InvoiceCurrency.getText();
            String Ratio = this.Ratio.getText();
            String Approval = this.Approval.getText();

            try {

                Connection con = Connect.getConnection();

                insert = con.prepareStatement("INSERT INTO `import`(`OpCode`, `DeclDate`, `Seq`, `HsCode`, `ItemCode`, "
                        + "`Origin`, `Export`, `PkgQty`, `Qty`, `Unit`, `ItemDesc`, `Supplier`, `Agent`, `TaxPayerName`, "
                        + "`ItemName`, `GrossWT`, `NetWT`, `InvoiceAMT`, `InvoiceCurrency`, `Ratio`, `Status`) "
                        + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

                insert.setString(1, OpCode);
                insert.setString(2, DeclDate);
                insert.setString(3, Seq);
                insert.setString(4, HsCode);
                insert.setString(5, ItemCode);
                insert.setString(6, Origin);
                insert.setString(7, Export);
                insert.setString(8, PkgQty);
                insert.setString(9, Qty);
                insert.setString(10, Unit);
                insert.setString(11, ItemDesc);
                insert.setString(12, Supplier);
                insert.setString(13, Agent);
                insert.setString(14, TaxPayerName);
                insert.setString(15, ItemName);
                insert.setString(16, GrossWT);
                insert.setString(17, NetWT);
                insert.setString(18, InvoiceAmt);
                insert.setString(19, InvoiceCurrency);
                insert.setString(20, Ratio);
                insert.setString(21, Approval);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(null, "New Import Recorded");
                table_update();

            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }

            this.OpCode.setText("");
            this.DeclDate.setText("");
            this.Seq.setText("");
            this.HSCode.setText("");
            this.ItemCode.setText("");
            this.Origin.setText("");
            this.Export.setText("");
            this.PkgQty.setText("");
            this.Qty.setText("");
            this.Unit.setText("");
            this.ItemDesc.setText("");
            this.Supplier.setText("");
            this.Agent.setText("");
            this.TaxPayerName.setText("");
            this.ItemName.setText("");
            this.GrossWT.setText("");
            this.NetWT.setText("");
            this.InvoiceAmt.setText("");
            this.InvoiceCurrency.setText("");
            this.Ratio.setText("");
            this.Approval.setText("");
            this.Approvedate.setText("");

        }
    }//GEN-LAST:event_addNewActionPerformed

    private void ApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveActionPerformed
        // TODO add your handling code here:

        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure about this Import", "Approve", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            String id = Df.getValueAt(selectedIndex, 2).toString();

            String Approval = "Approved";
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String todayDate = dateFormat.format(new Date());

            Approvedate.setText(todayDate);

            String dat = this.Approvedate.getText();

            try {

                Connection con = Connect.getConnection();

                insert = con.prepareStatement("UPDATE `import` SET `Status`=?,`ApproveDate`=? WHERE `OpCode`=?");

                insert.setString(1, Approval);
                insert.setString(2, dat);
                insert.setString(3, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(null, "Import Approved!");
                table_update();

            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }

            this.OpCode.setText("");
            this.DeclDate.setText("");
            this.Seq.setText("");
            this.HSCode.setText("");
            this.ItemCode.setText("");
            this.Origin.setText("");
            this.Export.setText("");
            this.PkgQty.setText("");
            this.Qty.setText("");
            this.Unit.setText("");
            this.ItemDesc.setText("");
            this.Supplier.setText("");
            this.Agent.setText("");
            this.TaxPayerName.setText("");
            this.ItemName.setText("");
            this.GrossWT.setText("");
            this.NetWT.setText("");
            this.InvoiceAmt.setText("");
            this.InvoiceCurrency.setText("");
            this.Ratio.setText("");
            this.Approval.setText("");
            this.Approvedate.setText("");

        }
    }//GEN-LAST:event_ApproveActionPerformed

    private void SplitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SplitActionPerformed
        // TODO add your handling code here:
        /*
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        try {

            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to delete this item", "Warning", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {

                String id = (Df.getValueAt(selectedIndex, 0).toString());
                Connection con = Connect.getConnection();

                insert = con.prepareStatement("delete from item where ItemCode=?");
                insert.setString(1, id);

                insert.executeUpdate();

                stock = con.prepareStatement("delete from stock where ItemCode=?");
                stock.setString(1, id);

                stock.executeUpdate();

                JOptionPane.showMessageDialog(null, "ItemM Deleted Successfully!");
                table_update();

                this.Code.setText("");
                this.Name.setText("");
                this.Barcode.setText("Yes");
                this.Purchase.setText("");
                this.Sale.setText("");
                this.Beginning.setText("");
                this.CurrentStock.setText("");
                this.Safety.setText("");
                this.Desc.setText("");
                this.Use.setText("Yes");
                this.Code.requestFocus();
                generateItemCode();

            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ItemM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         */
    }//GEN-LAST:event_SplitActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:

        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure about this Import", "Cancel", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            int selectedIndex = jTable1.getSelectedRow();
            String id = Df.getValueAt(selectedIndex, 2).toString();

            String Approval = "Canceled";
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String todayDate = dateFormat.format(new Date());

            Approvedate.setText(todayDate);

            String dat = this.Approvedate.getText();

            try {

                Connection con = Connect.getConnection();

                insert = con.prepareStatement("UPDATE `import` SET `Status`=?,`ApproveDate`=? WHERE `OpCode`=?");

                insert.setString(1, Approval);
                insert.setString(2, dat);
                insert.setString(3, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(null, "Import Canceled!");
                table_update();

            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }

            this.OpCode.setText("");
            this.DeclDate.setText("");
            this.Seq.setText("");
            this.HSCode.setText("");
            this.ItemCode.setText("");
            this.Origin.setText("");
            this.Export.setText("");
            this.PkgQty.setText("");
            this.Qty.setText("");
            this.Unit.setText("");
            this.ItemDesc.setText("");
            this.Supplier.setText("");
            this.Agent.setText("");
            this.TaxPayerName.setText("");
            this.ItemName.setText("");
            this.GrossWT.setText("");
            this.NetWT.setText("");
            this.InvoiceAmt.setText("");
            this.InvoiceCurrency.setText("");
            this.Ratio.setText("");
            this.Approval.setText("");
            this.Approvedate.setText("");

        }
    }//GEN-LAST:event_CancelActionPerformed

    private void SuppNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuppNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SuppNameActionPerformed

    private void SuppNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SuppNameKeyReleased
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(Supplier.getText(), 11));
    }//GEN-LAST:event_SuppNameKeyReleased

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void statusKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_statusKeyReleased
        // TODO add your handling code here:

        DefaultTableModel src = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(src);
        jTable1.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(status.getSelectedItem().toString(), 0));
    }//GEN-LAST:event_statusKeyReleased

    private void searchBetweenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBetweenMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBetweenMouseClicked

    private void searchBetweenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBetweenActionPerformed
        // TODO add your handling code here:

        try {

            SimpleDateFormat sdf = new SimpleDateFormat();
            String sdf1 = sdf.format(startDate.getDate());
            String sdf2 = sdf.format(endDate.getDate());
            String st = (String) status.getSelectedItem();
            Connection con = Connect.getConnection();
            String search = ("SELECT * FROM import where DeclDate>= '" + sdf1 + "' AND DeclDate<= '" + sdf2 + "' AND Status=" + st);
            PreparedStatement srch = con.prepareStatement(search);
            ResultSet rss = srch.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rss));
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBetweenActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        this.Approval.setText((String) Df.getValueAt(selectedIndex, 0));
        this.DeclDate.setText(Df.getValueAt(selectedIndex, 1).toString());
        this.OpCode.setText(Df.getValueAt(selectedIndex, 2).toString());
        this.Agent.setText(Df.getValueAt(selectedIndex, 3).toString());
        this.Seq.setText(Df.getValueAt(selectedIndex, 4).toString());
        this.HSCode.setText(Df.getValueAt(selectedIndex, 5).toString());
        this.ItemDesc.setText(Df.getValueAt(selectedIndex, 6).toString());
        this.Origin.setText(Df.getValueAt(selectedIndex, 7).toString());
        this.Export.setText(Df.getValueAt(selectedIndex, 8).toString());
        this.PkgQty.setText(Df.getValueAt(selectedIndex, 9).toString());
        this.Qty.setText(Df.getValueAt(selectedIndex, 10).toString());
        this.Supplier.setText(Df.getValueAt(selectedIndex, 11).toString());
        this.GrossWT.setText(Df.getValueAt(selectedIndex, 12).toString());

        PreparedStatement select;

        try {

            String Code = this.OpCode.getText();
            String HSCode = this.HSCode.getText();

            Connection con = Connect.getConnection();

            select = con.prepareStatement("SELECT ItemCode, Unit, TaxPayerName, ItemName, NetWT, InvoiceAMT, InvoiceCurrency, Ratio, ApproveDate FROM import WHERE OpCode = ? AND HsCode=?");
            select.setString(1, Code);
            select.setString(2, HSCode);

            ResultSet rs = select.executeQuery();

            if (rs.next()) {
                // Retrieve values from the ResultSet
                String ItemCode = rs.getString("ItemCode");
                this.ItemCode.setText(ItemCode);

                String Unit = rs.getString("Unit");
                this.Unit.setText(Unit);

                String TaxPayerName = rs.getString("TaxPayerName");
                this.TaxPayerName.setText(TaxPayerName);

                String ItemName = rs.getString("ItemName");
                this.ItemName.setText(ItemName);

                String NetWT = rs.getString("NetWT");
                this.NetWT.setText(NetWT);

                String InvoiceAMT = rs.getString("InvoiceAMT");
                this.InvoiceAmt.setText(InvoiceAMT);

                String InvoiceCurrency = rs.getString("InvoiceCurrency");
                this.InvoiceCurrency.setText(InvoiceCurrency);

                String Ratio = rs.getString("Ratio");
                this.Ratio.setText(Ratio);

                String ApproveDate = rs.getString("ApproveDate");
                this.Approvedate.setText(ApproveDate);

            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Agent;
    private javax.swing.JTextField Approval;
    private javax.swing.JButton Approve;
    private javax.swing.JTextField Approvedate;
    private javax.swing.JButton Cancel;
    private javax.swing.JTextField DeclDate;
    private javax.swing.JButton Exit;
    private javax.swing.JTextField Export;
    private javax.swing.JTextField GrossWT;
    private javax.swing.JTextField HSCode;
    private javax.swing.JTextField InvoiceAmt;
    private javax.swing.JTextField InvoiceCurrency;
    private javax.swing.JTextField ItemCode;
    private javax.swing.JTextField ItemDesc;
    private javax.swing.JTextField ItemName;
    private javax.swing.JTextField NetWT;
    private javax.swing.JTextField OpCode;
    private javax.swing.JTextField Origin;
    private javax.swing.JTextField PkgQty;
    private javax.swing.JTextField Qty;
    private javax.swing.JTextField Ratio;
    private javax.swing.JTextField Seq;
    private javax.swing.JButton Split;
    private javax.swing.JTextField SuppName;
    private javax.swing.JTextField Supplier;
    private javax.swing.JTextField TaxPayerName;
    private javax.swing.JTextField Unit;
    private javax.swing.JButton addNew;
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton searchBetween;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JComboBox<String> status;
    // End of variables declaration//GEN-END:variables
}
